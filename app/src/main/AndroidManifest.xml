<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="com.example.cocktailzy.combiecordovaandrn">
    <application
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:roundIcon="@mipmap/ic_launcher_round"
            android:supportsRtl="true"
            android:theme="@style/AppTheme">
        <activity
                android:name=".NativeActivity"
                android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity
                android:name="com.instantmessage.MainActivity"
                android:label="@string/app_name">
        </activity>
        <activity android:name="com.facebook.react.devsupport.DevSettingsActivity"/>
        <!-- 【必须】 信鸽receiver广播接收 -->
        <receiver android:name="com.jeepeng.react.xgpush.receiver.MessageReceiver"
                  android:exported="true" >
            <intent-filter>
                <!-- 接收消息透传 -->
                <action android:name="com.tencent.android.tpush.action.PUSH_MESSAGE" />
                <!-- 监听注册、反注册、设置/删除标签、通知被点击等处理结果 -->
                <action android:name="com.tencent.android.tpush.action.FEEDBACK" />
            </intent-filter>
        </receiver>
        <receiver
                android:name="com.tencent.android.tpush.XGPushReceiver"
                android:process=":xg_service_v3">
            <intent-filter android:priority="0x7fffffff">
                <!-- 【必须】 信鸽SDK的内部广播 -->
                <action android:name="com.tencent.android.tpush.action.SDK" />
                <action android:name="com.tencent.android.tpush.action.INTERNAL_PUSH_MESSAGE" />
                <!-- 【必须】 系统广播：开屏和网络切换 -->
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <!-- 【可选】 一些常用的系统广播，增强信鸽service的复活机会，请根据需要选择。当然，你也可以添加APP自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>
        <!-- 【必须】 信鸽service -->
        <service
                android:name="com.tencent.android.tpush.service.XGPushServiceV3"
                android:exported="true"
                android:persistent="true"
                android:process=":xg_service_v3" />


        <!-- 【必须】 提高service的存活率 -->
        <service
                android:name="com.tencent.android.tpush.rpc.XGRemoteService"
                android:exported="true">
            <intent-filter>
                <!-- 【必须】 请修改为当前APP包名 .PUSH_ACTION, 如demo的包名为：com.qq.xgdemo -->
                <action android:name="com.instantmessage.PUSH_ACTION" />
            </intent-filter>
        </service>


        <!-- 【必须】 【注意】authorities修改为 包名.AUTH_XGPUSH, 如demo的包名为：com.qq.xgdemo-->
        <provider
                android:name="com.tencent.android.tpush.XGPushProvider"
                android:authorities="com.instantmessage.AUTH_XGPUSH"
                android:exported="true" />

        <!-- 【必须】 【注意】authorities修改为 包名.TPUSH_PROVIDER, 如demo的包名为：com.qq.xgdemo-->
        <provider
                android:name="com.tencent.android.tpush.SettingsContentProvider"
                android:authorities="com.instantmessage.TPUSH_PROVIDER"
                android:exported="false" />

        <!-- 【必须】 【注意】authorities修改为 包名.TENCENT.MID.V3, 如demo的包名为：com.qq.xgdemo-->
        <provider
                android:name="com.tencent.mid.api.MidProvider"
                android:authorities="com.instantmessage.TENCENT.MID.V3"
                android:exported="true" />
    </application>

</manifest>